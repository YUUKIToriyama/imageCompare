{"version":3,"sources":["components/ScrollDialog.jsx","components/MyAppBar.jsx","components/ImageLoader.jsx","components/PreviewImage.jsx","components/ImageCrop.jsx","components/ImageDisplay.jsx","components/Workflow.jsx","components/MainContent.jsx","components/LoadingSpinner.jsx","App.jsx","index.js"],"names":["ScrollDialog","props","handleClickOpen","setState","open","handleClose","state","descriptionElement","React","createRef","Button","onClick","this","label","Dialog","onClose","scroll","aria-labelledby","aria-describedby","DialogTitle","id","title","DialogContent","dividers","DialogContentText","ref","tabIndex","content","DialogActions","color","Component","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","message","split","map","line","MyAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","variant","ImageLoader","fileInputCallback","file","fileDetail","img","Image","src","base64","onload","width","height","onInputImageChange","Box","labelText","loaderId","imagePreview","multiple","callbackFunction","console","log","name","buttonComponent","component","PhotoCamera","textFieldComponent","type","accept","PreviewImage","mapRef","layer","imageBounds","markers","image","L","latLngBounds","current","center","maxBounds","pad","crs","CRS","Simple","imageOverlay","addTo","fitBounds","i","divIcon","html","getCenter","marker","draggable","icon","push","forEach","on","event","target","getLatLng","style","ImageCrop","drawRectifyArea","fillColor","cv","Scalar","strokeColor","n","vertices","length","rect","getBoundingClientRect","x","clientX","left","scale","y","clientY","top","vertex","Point","parseInt","circle","working","FILLED","imshow","canvasElement","LINE_AA","rectifyImage","srcArr","distance","p1","p2","Math","sqrt","w1","h1","w2","h2","w","max","h","dstArr","srcTri","matFromArray","CV_32FC2","dstTri","M","getPerspectiveTransform","dst","Mat","dsize","Size","warpPerspective","INTER_LINEAR","BORDER_CONSTANT","processedImage","url","toDataURL","onImageProcessingDone","mat","delete","images","imageSize","ImageDisplay","lat","lng","zoom","Workflow","steps","renderImageLoader","inputImage","inputImages","handleImageProcessingDone","handleNext","activeStep","handleBack","handleReset","allowNextStep","goNextStep","getStepContent","step","Stepper","orientation","index","Step","StepLabel","StepContent","actionsContainer","disabled","button","Paper","square","elevation","resetContainer","withStyles","marginTop","marginBottom","padding","MainContent","LoadingSpinner","loading","CircularProgress","Icon","fontSize","getBuildInformation","createMuiTheme","palette","primary","orange","typography","fontFamily","join","h3","h4","h5","h6","App","ThemeProvider","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1330c925.chunk.js","sourcesContent":["/* ScrollDialog.jsx */\n\nimport React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass ScrollDialog extends React.Component {\n    constructor(props) {\n\t\tsuper(props);\n        this.state = {\n            open: false\n        };\n        this.descriptionElement = React.createRef();\n    }\n\n    handleClickOpen = () => {\n        this.setState({\n            open: true\n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n/*\t\n\tcomponentDidUpdate(prevPrep, prevState) {\n\t\tif (prevState.open !== this.state.open) {\n\t\t\tif (this.descriptionElement.current != null) {\n\t\t\t\tthis.descriptionElement.current.focus();\n\t\t\t}\n\t\t}\n\t}\n\t*/\n\n    render() {\n        return (\n            <div>\n                <Button onClick={this.handleClickOpen}>{this.props.label}</Button>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    scroll=\"paper\"\n                    aria-labelledby=\"scroll-dialog-title\"\n                    aria-describedby=\"scroll-dialog-description\"\n                >\n                    <DialogTitle id=\"scroll-dialog-title\">{this.props.title}</DialogTitle>\n                    <DialogContent dividers={true}>\n                        <DialogContentText\n                            id=\"scroll-dialog-description\"\n                            ref={this.descriptionElement}\n                            tabIndex={-1}\n                        >\n\t\t\t\t\t\t\t{this.props.content}\n                        </DialogContentText>\n                    </DialogContent>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<Button onClick={this.handleClose} color=\"primary\">\n\t\t\t\t\t\t\tOK\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default ScrollDialog;","/* MyAppBar.jsx */\n\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {\n\tAppBar,\n\tToolbar,\n\tTypography,\n\tIconButton\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\n// 自作モジュールの読み込み\nimport ScrollDialog from \"./ScrollDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2)\n\t},\n\ttitle: {\n\t\tflexGrow: 1\n\t}\n}));\n\nconst message = `\nimageCompare 0.9\nhttps://github.com/YUUKIToriyama/imageCompare\n(C)Copyright 2020 YUUKIToriyama All Rights Reserved.\n`.split(\"\\n\").map(line => <span>{line}<br/></span>);\n\nconst MyAppBar = () => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n\t\t\t\t\t\t<MenuIcon/>\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\n\t\t\t\t\t\timageCompare\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<ScrollDialog\n\t\t\t\t\t\tlabel=\"Help\"\n\t\t\t\t\t\ttitle=\"About this app\"\n\t\t\t\t\t\tcontent={message}\n\t\t\t\t\t/>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t);\n};\n\nexport default MyAppBar;","/* ImageLoader.jsx */\n\nimport React from \"react\";\nimport { Box, IconButton } from \"@material-ui/core\";\nimport { PhotoCamera, DeleteForever } from \"@material-ui/icons\";\nimport FileInputComponent from \"react-file-input-previews-base64\";\n\nclass ImageLoader extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfile: {},\n\t\t};\n\t}\n\n\tfileInputCallback = (file) => {\n\t\tlet fileDetail = file;\n\t\tlet img = new Image();\n\t\timg.src = fileDetail.base64;\n\t\timg.onload = () => {\n\t\t\tfileDetail[\"width\"] = img.width;\n\t\t\tfileDetail[\"height\"] = img.height;\n\t\t\tthis.setState({\n\t\t\t\tfile: fileDetail,\n\t\t\t});\n\t\t\tthis.props.onInputImageChange(fileDetail);\n\t\t};\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<FileInputComponent\n\t\t\t\t\tlabelText={this.props.loaderId + 1 + \"枚目\"}\n\t\t\t\t\timagePreview={true}\n\t\t\t\t\tmultiple={false}\n\t\t\t\t\tcallbackFunction={(file) => {\n\t\t\t\t\t\tconsole.log(file.name);\n\t\t\t\t\t\tthis.fileInputCallback(file, 1);\n\t\t\t\t\t}}\n\t\t\t\t\tbuttonComponent={\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\taria-label=\"upload picture\"\n\t\t\t\t\t\t\tcomponent=\"span\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<PhotoCamera />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t}\n\t\t\t\t\ttextFieldComponent={<input type=\"text\" />}\n\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t/>\n\t\t\t\t{/*\n\t\t\t\t// 読み込んだ画像のleafletでの表示は次のセクションにて\n\t\t\t\t{this.state.file.name !== undefined ? (\n\t\t\t\t\t<PreviewImage image={this.state.file} />\n\t\t\t\t) : (\n\t\t\t\t\t\"\"\n\t\t\t\t)}\n\t\t\t\t*/}\n\t\t\t</Box>\n\t\t);\n\t}\n}\nexport default ImageLoader;\n","/* PreviewImage.jsx */\n\nimport React from \"react\";\n\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\n\n/*\nimport markerIcon from \"leaflet/dist/images/marker-icon.png\";\nconst defaultIcon = L.icon({\n\ticonUrl: markerIcon,\n\ticonSize: [25, 35],\n});\n*/\n\nclass PreviewImage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.mapRef = React.createRef();\n\t\tthis.state = {\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t};\n\t\tthis.map = null;\n\t\tthis.layer = null;\n\t\tthis.imageBounds;\n\t\tthis.markers = [];\n\t}\n\n\tcomponentDidMount() {\n\t\tlet image = this.props.image;\n\t\tthis.imageBounds = new L.latLngBounds([\n\t\t\t[-image.height / 2, -image.width / 2],\n\t\t\t[image.height / 2, image.width / 2],\n\t\t]);\n\n\t\tthis.map = L.map(this.mapRef.current, {\n\t\t\tcenter: [0, 0],\n\t\t\tmaxBounds: this.imageBounds.pad(0.3),\n\t\t\tcrs: L.CRS.Simple,\n\t\t});\n\t\tthis.layer = L.imageOverlay(image.base64, this.imageBounds);\n\t\tthis.layer.addTo(this.map);\n\t\tthis.map.fitBounds(this.imageBounds);\n\n\t\t// マーカーを設置\n\t\t// これを動かして位置合わせをする\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\tlet divIcon = L.divIcon({\n\t\t\t\thtml: `<div class=\"bg-round\"><span>${10 - i}</span></div>`,\n\t\t\t\tclassName: \"divicon\",\n\t\t\t});\n\t\t\tlet center = this.map.getCenter();\n\t\t\tlet marker = new L.marker(center, {\n\t\t\t\tdraggable: true,\n\t\t\t\ticon: divIcon,\n\t\t\t});\n\t\t\tthis.markers.push(marker);\n\t\t}\n\t\tthis.markers.forEach((marker) => {\n\t\t\tmarker.on(\"moveend\", (event) => {\n\t\t\t\tlet position = event.target.getLatLng();\n\t\t\t\tconsole.log(position);\n\t\t\t});\n\t\t\tmarker.addTo(this.map);\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div ref={this.mapRef} style={{ width: \"100%\", height: \"300px\" }}></div>\n\t\t);\n\t}\n}\n\nexport default PreviewImage;\n","/* ImageCrop.jsx */\n// canvasを使って画像の位置合わせをするのをやめる\n// その代わりにleafletのピンを用いて位置の特定を行ない、\n// それをもとにopencvで位置合わせを行なう\n\nimport React from \"react\";\nimport Box from \"@material-ui/core/Box\";\n//import opencvUtils from \"../opencv-utils/opencv-utils\";\n\n// 自作モジュールの読み込み\nimport PreviewImage from \"./PreviewImage\";\n\nclass ImageCrop extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.canvasElement = React.createRef();\n\t\tthis.images = this.props.images;\n\t\tthis.src;\n\t\tthis.working;\n\t\tthis.imageSize;\n\t\tthis.scale;\n\t\tthis.state = {\n\t\t\tvertices: [],\n\t\t};\n\t}\n\n\t/*\n\tshowImage = (imageURL, canvas) => {\n\t\t// opencvUtilsを援用して画像をCanvasに読み込み\n\t\t// typeof(src): cv.Mat\n\t\tconst opencv_utils = new opencvUtils();\n\t\topencv_utils.loadImage(imageURL, (src) => {\n\t\t\tcv.imshow(canvas, src);\n\t\t\t// 一旦srcを削除するのでデータを退避\n\t\t\tthis.src = src.clone();\n\t\t\tthis.working = src.clone();\n\n\t\t\t// 画像のサイズを計測\n\t\t\tconsole.log(src.size());\n\t\t\tthis.imageSize = src.size();\n\t\t\tthis.scale = canvas.clientWidth / this.imageSize.width;\n\n\t\t\t// srcを削除\n\t\t\tsrc.delete();\n\t\t});\n\t};\n\t*/\n\n\tdrawRectifyArea = (event) => {\n\t\tconst fillColor = new cv.Scalar(255, 255, 0, 0.5);\n\t\tconst strokeColor = new cv.Scalar(255, 0, 255, 0.5);\n\t\tlet n = this.state.vertices.length;\n\t\t// ポイントの数が0,1,2,3個のとき\n\t\tif (n < 4) {\n\t\t\t/*\n\t\t\t * キャンパス上のマウスカーソルの位置を特定し、\n\t\t\t * それと、事前に求めておいたscaleの値(実際の画像の大きさと表示上の大きさの比)を元に、\n\t\t\t * 切り出しポイントを特定している。\n\t\t\t */\n\t\t\tlet rect = event.target.getBoundingClientRect();\n\t\t\tlet x = (event.clientX - rect.left) / this.scale;\n\t\t\tlet y = (event.clientY - rect.top) / this.scale;\n\t\t\t//console.log(x,y);\n\t\t\tlet vertex = new cv.Point(parseInt(x), parseInt(y));\n\n\t\t\t// その位置にマーカーを描画\n\t\t\tcv.circle(this.working, vertex, 10 / this.scale, fillColor, cv.FILLED);\n\t\t\tcv.imshow(this.canvasElement.current, this.working);\n\n\t\t\t// 配列verticesに計算したvertexを追加\n\t\t\tthis.state.vertices.push(vertex);\n\n\t\t\t// 2点めからはその一つ前の点とその点を結ぶ線分も描く\n\t\t\tif (n != 0) {\n\t\t\t\tcv.line(\n\t\t\t\t\tthis.working,\n\t\t\t\t\tthis.state.vertices[n - 1],\n\t\t\t\t\tthis.state.vertices[n],\n\t\t\t\t\tstrokeColor,\n\t\t\t\t\t2 / this.scale,\n\t\t\t\t\tcv.LINE_AA,\n\t\t\t\t\t0\n\t\t\t\t);\n\t\t\t\tcv.imshow(this.canvasElement.current, this.working);\n\t\t\t}\n\t\t}\n\n\t\t// ポイントの数が3個のとき\n\t\t// 4点目を指定したら最初の1つ目の点と4つ目の点を結び四角形にする\n\t\tif (n == 3) {\n\t\t\tcv.line(\n\t\t\t\tthis.working,\n\t\t\t\tthis.state.vertices[3],\n\t\t\t\tthis.state.vertices[0],\n\t\t\t\tstrokeColor,\n\t\t\t\t2 / this.scale,\n\t\t\t\tcv.LINE_AA,\n\t\t\t\t0\n\t\t\t);\n\t\t\tcv.imshow(this.canvasElement.current, this.working);\n\t\t}\n\n\t\t// 4点指定できたら画像処理を行う\n\t\tif (this.state.vertices.length == 4) {\n\t\t\tthis.rectifyImage(this.src, this.state.vertices);\n\t\t}\n\t};\n\n\t// ホモグラフィ変換で画像の歪みを補正する\n\trectifyImage = (src, vertices) => {\n\t\tlet srcArr = [];\n\t\tvertices.forEach((vertex) => {\n\t\t\tsrcArr.push(vertex.x);\n\t\t\tsrcArr.push(vertex.y);\n\t\t});\n\n\t\tconst distance = (p1, p2) => {\n\t\t\treturn Math.sqrt((p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2);\n\t\t};\n\n\t\tlet w1 = distance(vertices[0], vertices[1]);\n\t\tlet h1 = distance(vertices[1], vertices[2]);\n\t\tlet w2 = distance(vertices[2], vertices[3]);\n\t\tlet h2 = distance(vertices[3], vertices[0]);\n\n\t\tlet w = Math.max(w1, w2);\n\t\tlet h = Math.max(h1, h2);\n\n\t\tconst dstArr = [0, 0, w, 0, w, h, 0, h];\n\n\t\tconst srcTri = cv.matFromArray(4, 1, cv.CV_32FC2, srcArr);\n\t\tconst dstTri = cv.matFromArray(4, 1, cv.CV_32FC2, dstArr);\n\t\tconst M = cv.getPerspectiveTransform(srcTri, dstTri);\n\n\t\tlet dst = new cv.Mat();\n\t\tlet dsize = new cv.Size(w, h);\n\n\t\tcv.warpPerspective(\n\t\t\tsrc,\n\t\t\tdst,\n\t\t\tM,\n\t\t\tdsize,\n\t\t\tcv.INTER_LINEAR,\n\t\t\tcv.BORDER_CONSTANT,\n\t\t\tnew cv.Scalar()\n\t\t);\n\t\tcv.imshow(this.canvasElement.current, dst);\n\n\t\t// 処理後の画像を親コンポーネントに渡す\n\t\t//let dataURL = this.canvasElement.current.toDataURL(\"image/png\", 1, w, h);\n\t\tvar processedImage = {\n\t\t\turl: this.canvasElement.current.toDataURL(\"image/png\", 1, w, h),\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t};\n\t\tthis.props.onImageProcessingDone(processedImage);\n\n\t\t[src, dst].forEach((mat) => mat.delete());\n\t};\n\n\tcomponentDidMount() {\n\t\t//this.showImage(this.props.image, this.canvasElement.current);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<PreviewImage image={this.images[0]} />\n\t\t\t\t<PreviewImage image={this.images[1]} />\n\t\t\t\t{/*\n\t\t\t\t<canvas\n\t\t\t\t\tonClick={(event) => this.drawRectifyArea(event)}\n\t\t\t\t\tref={this.canvasElement}\n\t\t\t\t\tstyle={{ width: \"500px\", maxWidth: \"90%\" }}\n\t\t\t\t></canvas>\n\t\t\t\t*/}\n\t\t\t</Box>\n\t\t);\n\t}\n}\n\nexport default ImageCrop;\n","/* ImageDisplay.jsx */\n\nimport React from \"react\";\nimport \"leaflet/dist/leaflet.css\";\n/*\nimport {\n    MapContainer,\n    ImageOverlay,\n    //Marker\n} from \"react-leaflet\";\n*/\nimport L from \"leaflet\";\n/*\nimport markerIcon from \"leaflet/dist/images/marker-icon.png\";\nconst popupIcon = L.icon({\n    iconUrl: markerIcon,\n    iconSize: [25,35]\n});\n*/\n\nclass ImageDisplay extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lat: 0, \n            lng: 0,\n            zoom: 0,\n            crs: L.CRS.Simple\n        }\n    }\n\n    render() {\n        const image = this.props.image;\n        return (\n            /*\n            <MapContainer center={[this.state.lat, this.state.lng]} zoom={this.state.zoom} crs={this.state.crs} style={{width: \"100%\", height: \"300px\"}}>\n                <ImageOverlay\n                    attribution=\"imageCompare\"\n                    url={image.url}\n                    bounds={L.latLngBounds([-image.width / 2, -image.height / 2], [image.width / 2, image.height / 2])}\n                >\n                </ImageOverlay>\n            </MapContainer>\n            */\n           <div></div>\n        )\n    }\n}\n\nexport default ImageDisplay;","/* Workflow.jsx */\n\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n\tStepper,\n\tStep,\n\tStepLabel,\n\tStepContent,\n\tButton,\n\tBox,\n\tPaper,\n\tTypography,\n} from \"@material-ui/core\";\n\n// 自作モジュールの読み込み\nimport ImageLoader from \"./ImageLoader\";\nimport ImageCrop from \"./ImageCrop\";\nimport ImageDisplay from \"./ImageDisplay\";\n\nconst styles = {\n\troot: {\n\t\twidth: \"100%\",\n\t},\n\tbutton: {\n\t\tmarginTop: \"15px\",\n\t\tmarginRight: \"15px\",\n\t},\n\tactionsContainer: {\n\t\tmarginBottom: \"15px\",\n\t},\n\tresetContainer: {\n\t\tpadding: \"15px\",\n\t},\n};\n\nclass Workflow extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t//this.handleInputImageChange = this.handleInputImageChange.bind(this);\n\t\tthis.state = {\n\t\t\tactiveStep: 0,\n\t\t\tgoNextStep: true,\n\t\t\tinputImages: [null, null],\n\t\t\tprocessedImage: {\n\t\t\t\turl: \"\",\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t},\n\t\t};\n\t}\n\n\tsteps = [\"画像をアップロード\", \"対応点を選択\", \"変換\"];\n\n\t// ImageLoaderを複数用意するための準備\n\trenderImageLoader = (i) => {\n\t\treturn (\n\t\t\t<ImageLoader\n\t\t\t\tloaderId={i}\n\t\t\t\tonInputImageChange={(inputImage) => {\n\t\t\t\t\tlet images = this.state.inputImages;\n\t\t\t\t\timages[i] = inputImage;\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tinputImages: images,\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t};\n\n\t// 処理の終わった画像を受け取る関数\n\t// ImageCropsから呼び出して使う\n\thandleImageProcessingDone = (image) => {\n\t\tthis.setState({\n\t\t\tprocessedImage: image,\n\t\t});\n\t};\n\n\t// Stepperの挙動を制御する関数\n\thandleNext = () => {\n\t\tthis.setState({\n\t\t\tactiveStep: this.state.activeStep + 1,\n\t\t});\n\t};\n\thandleBack = () => {\n\t\tthis.setState({\n\t\t\tactiveStep: this.state.activeStep - 1,\n\t\t});\n\t};\n\thandleReset = () => {\n\t\tthis.setState({\n\t\t\tactiveStep: 0,\n\t\t});\n\t};\n\n\t// 次に進んでよいかどうかを状態goNextStepを使って管理している\n\tallowNextStep = () => {\n\t\tthis.setState({\n\t\t\tgoNextStep: true,\n\t\t});\n\t};\n\n\tgetStepContent = (step) => {\n\t\tswitch (step) {\n\t\t\tcase 0:\n\t\t\t\treturn (\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Typography>処理を行なう画像をアップロード</Typography>\n\t\t\t\t\t\t{this.renderImageLoader(0)}\n\t\t\t\t\t\t{this.renderImageLoader(1)}\n\t\t\t\t\t</Box>\n\t\t\t\t);\n\t\t\tcase 1:\n\t\t\t\treturn (\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tマーカーを動かして対応する点を指定してください\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<ImageCrop\n\t\t\t\t\t\t\timages={this.state.inputImages}\n\t\t\t\t\t\t\tonImageProcessingDone={this.handleImageProcessingDone}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t);\n\t\t\tcase 2:\n\t\t\t\treturn (\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Typography>処理中……</Typography>\n\t\t\t\t\t\t<ImageDisplay image={this.state.processedImage} />\n\t\t\t\t\t</Box>\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn <Typography>Unknown step</Typography>;\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Box className={this.props.classes.root}>\n\t\t\t\t<Stepper activeStep={this.state.activeStep} orientation=\"vertical\">\n\t\t\t\t\t{this.steps.map((label, index) => (\n\t\t\t\t\t\t<Step key={label}>\n\t\t\t\t\t\t\t<StepLabel>{label}</StepLabel>\n\t\t\t\t\t\t\t<StepContent>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t// 各ステップがここに挿入される\n\t\t\t\t\t\t\t\t\tthis.getStepContent(index)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<Box className={this.props.classes.actionsContainer}>\n\t\t\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tdisabled={this.state.activeStep === 0}\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleBack}\n\t\t\t\t\t\t\t\t\t\t\tclassName={this.props.classes.button}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tdisabled={!this.state.goNextStep}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleNext}\n\t\t\t\t\t\t\t\t\t\t\tclassName={this.props.classes.button}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.activeStep === this.steps.length - 1\n\t\t\t\t\t\t\t\t\t\t\t\t? \"Finish\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"Next\"}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</StepContent>\n\t\t\t\t\t\t</Step>\n\t\t\t\t\t))}\n\t\t\t\t</Stepper>\n\t\t\t\t{this.state.activeStep === this.steps.length && (\n\t\t\t\t\t<Paper\n\t\t\t\t\t\tsquare\n\t\t\t\t\t\televation={0}\n\t\t\t\t\t\tclassName={this.props.classes.resetContainer}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Typography>処理が完了しました！</Typography>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={this.handleReset}\n\t\t\t\t\t\t\tclassName={this.props.classes.button}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tやり直す\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Paper>\n\t\t\t\t)}\n\t\t\t</Box>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(Workflow);\n","/* MainContent.jsx */\n\nimport React from \"react\";\n\n// 自作モジュールの読み込み\nimport Workflow from \"./Workflow.jsx\";\n\nclass MainContent extends React.Component {\n\tstate = {\n\t\timage: \"\"\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Workflow />\n\t\t);\n\t}\n}\n\nexport default MainContent;\n","/* LoadingSpinner.jsx */\n/*\n * OpenCV.jsの読み込みに時間がかかるので読み込んでいるあいだスピナーを表示します\n *\n */\n\nimport React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Icon from '@material-ui/core/Icon';\nimport DoneIcon from '@material-ui/icons/Done';\n\n// 自作モジュールの読み込み\nimport ScrollDialog from \"./ScrollDialog\";\n\nclass LoadingSpinner extends React.Component {\n\trender() {\n\t\treturn(\n\t\t\t<Box>\n\t\t\t\t{this.props.loading ? <CircularProgress /> : <Icon color=\"primary\" fontSize=\"large\"><DoneIcon/></Icon>}\n\t\t\t\t<Typography>\n\t\t\t\t\t{this.props.loading ? \"Now Loading OpenCV.js...\" : \"OpenCV.js has been loaded on your browser!\"}\n\t\t\t\t</Typography>\n\t\t\t\t{this.props.loading ? \"\" : <ScrollDialog label=\"About OpenCV.js\" title=\"Build information\" content={cv.getBuildInformation().split(\"\\n\").map((line) => <span>{line}<br /></span>)} />}\n\t\t\t</Box>\n\t\t)\n\t}\n}\n\nexport default LoadingSpinner;\n","/* App.jsx */\nimport React from \"react\";\nimport {\n\tcreateMuiTheme,\n\tThemeProvider\n} from '@material-ui/core/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport orange from \"@material-ui/core/colors/orange\";\n\n// 自作モジュールの読み込み\nimport opencvUtils from \"./opencv-utils/opencv-utils.js\";\nimport MyAppBar from \"./components/MyAppBar.jsx\";\nimport MainContent from \"./components/MainContent.jsx\";\nimport LoadingSpinner from \"./components/LoadingSpinner.jsx\";\n\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: orange\n\t},\n\ttypography: {\n\t\tfontFamily: [\n\t\t\t\"Roboto\",\n\t\t\t\"Noto Sans\"\n\t\t].join(\",\"),\n\t\tfontSize: 13,\n\t\th1: {\n\t\t\tfontSize: \"1.75rem\"\n\t\t},\n\t\th2: {\n\t\t\tfontSize: \"1.5rem\"\n\t\t},\n\t\th3: {\n\t\t\tfontSize: \"1.25rem\"\n\t\t},\n\t\th4: {\n\t\t\tfontSize: \"1.125rem\"\n\t\t},\n\t\th5: {\n\t\t\tfontSize: \"1rem\"\n\t\t},\n\t\th6: {\n\t\t\tfontSize: \"1rem\"\n\t\t}\n\t}\n});\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloading: true,\n\t\t}\n\t}\n\n\t/*\n\t// Appコンポーネントが呼び出されたら次はOpenCV.jsの読み込みを行なう\n\tcomponentDidMount() {\n\t\tconst opencv_utils = new opencvUtils();\n\t\topencv_utils.loadOpenCV(\"https://docs.opencv.org/4.5.0/opencv.js\", () => {\n\t\t\t//opencv_utils.executeScript(\"./process.js\");\n\t\t\t// OpenCV.jsの読み込みが完了したらstate.loadingをfalseにする\n\t\t\tthis.setState({\n\t\t\t\tloading: false\n\t\t\t});\n\t\t});\n\t}\n\t*/\n\n\trender() {\n\t\treturn (\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<MyAppBar />\n\t\t\t\t<LoadingSpinner loading={this.state.loading} />\n\t\t\t\t<MainContent />\n\t\t\t</ThemeProvider>\n\t\t);\n\t}\n}\n\nexport default App;\n","/* index.js */\n\n// react\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// leaflet\n//import Leaflet from \"leaflet\";\n//import {MapContainer, TileLayer} from \"react-leaflet\";\n\n// opencv\n//import \"./opencv\";\n\n// styleSheet\nimport \"./style.css\";\n//import \"../node_modules/leaflet/dist/leaflet.css\"; // ./style.cssによって間接的に読み込んでいる \n\n// Appコンポーネントを読み込む\nimport App from \"./App.jsx\";\nReactDOM.render(<App/>, document.getElementById(\"app\"));\n"],"sourceRoot":""}