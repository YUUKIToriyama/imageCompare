{"version":3,"sources":["opencv-utils/opencv-utils.js","components/ScrollDialog.jsx","components/MyAppBar.jsx","components/PreviewImage.jsx","components/ImageLoader.jsx","components/ImageCrop.jsx","components/ImageDisplay.jsx","components/Workflow.jsx","components/MainContent.jsx","components/LoadingSpinner.jsx","App.jsx","index.js"],"names":["opencvUtils","OPENCV_URL","onloadCallback","script","document","createElement","setAttribute","addEventListener","cv","getBuildInformation","console","log","error","src","querySelector","appendChild","url","callback","img","Image","crossOrigin","onload","imread","IMREAD_COLOR","delete","SCRIPT_URL","ScrollDialog","props","handleClickOpen","setState","open","handleClose","state","descriptionElement","React","createRef","Button","onClick","this","label","Dialog","onClose","scroll","aria-labelledby","aria-describedby","DialogTitle","id","title","DialogContent","dividers","DialogContentText","ref","tabIndex","content","DialogActions","color","Component","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","message","split","map","line","MyAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","variant","PreviewImage","mapRef","width","height","layer","imageBounds","image","L","latLngBounds","current","center","maxBounds","pad","crs","CRS","Simple","imageOverlay","base64","addTo","fitBounds","style","ImageLoader","fileInputCallback","file","flag","fileDetail","file1","file2","Box","labelText","loaderId","imagePreview","multiple","callbackFunction","name","buttonComponent","component","PhotoCamera","textFieldComponent","type","accept","undefined","ImageCrop","showImage","imageURL","canvas","loadImage","imshow","clone","working","size","imageSize","scale","clientWidth","drawRectifyArea","event","fillColor","Scalar","strokeColor","n","vertices","length","rect","target","getBoundingClientRect","x","clientX","left","y","clientY","top","vertex","Point","parseInt","circle","FILLED","canvasElement","push","LINE_AA","rectifyImage","srcArr","forEach","distance","p1","p2","Math","sqrt","w1","h1","w2","h2","w","max","h","dstArr","srcTri","matFromArray","CV_32FC2","dstTri","M","getPerspectiveTransform","dst","Mat","dsize","Size","warpPerspective","INTER_LINEAR","BORDER_CONSTANT","processedImage","toDataURL","onImageProcessingDone","mat","maxWidth","ImageDisplay","lat","lng","zoom","Workflow","steps","handleInputImageChange","i","renderImageLoader","onInputImageChange","handleImageProcessingDone","handleNext","activeStep","handleBack","handleReset","getStepContent","step","inputImage","bind","inputImages","Stepper","orientation","index","Step","StepLabel","StepContent","actionsContainer","disabled","button","Paper","square","elevation","resetContainer","withStyles","marginTop","marginBottom","padding","MainContent","LoadingSpinner","loading","CircularProgress","Icon","fontSize","createMuiTheme","palette","primary","orange","typography","fontFamily","join","h3","h4","h5","h6","App","ThemeProvider","CssBaseline","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9ea96192.chunk.js","sourcesContent":["/* opencv-utils.js \n *\n * Overview\n * OpenCV.jsを使用する際、そのファイルの読み込みの順番やスクリプトの実行のタイミングを考慮しながらプログラムを書くのが難しい。\n * そこで、OpenCV.jsを読み込み安全に処理を実行できるようユーティリティを開発した。\n * このスクリプトには原型があって、それを参考に独自のスクリプトを作成した(下記Referenceの項を参照)。\n *\n * Usage\n * const utils = new opencvUtils();\n * utils.loadOpenCV(\"https://docs.opencv.org/3.4.0/opencv.js\", () => {\n * \tutils.executeScript(\"./process.js\");\n * });\n *\n * Reference\n * https://docs.opencv.org/3.4/utils.js\n *\n * Homepage\n * https://github.com/YUUKIToriyama/opencv-utils.js\n *\n */\n\nconst opencvUtils = class {\n\tloadOpenCV(OPENCV_URL, onloadCallback) {\n\t\t/*\n\t\t * utils.loadOpenCV(url, callback);\n\t\t *\n\t\t * OpenCV.jsを読み込むための函数。\n\t\t * 以下のようなscriptタグを生成し、ドキュメントに挿入する。\n\t\t * <script async type=\"text/javascript\" src=\"OPENCV_URL\"></script>\n\t\t * さらにイベントリスナーには読み込みが完了した際、OpenCV.jsのビルド情報を出力する函数を設定している。\n\t\t *\n\t\t */\n\t\tlet script = document.createElement(\"script\");\n\t\tscript.setAttribute(\"async\", \"\");\n\t\tscript.setAttribute(\"type\", \"text/javascript\");\n\t\tscript.addEventListener(\"load\", () => {\n\t\t\tif (cv.getBuildInformation) {\n\t\t\t\t// opencvの読み込みが完了している場合\n\t\t\t\tconsole.log(cv.getBuildInformation());\n\t\t\t\tonloadCallback();\n\t\t\t} else {\n\t\t\t\t// opencvの読み込みを待っている場合\n\t\t\t\tcv[\"onRuntimeInitialized\"] = () => {\n\t\t\t\t\tconsole.log(cv.getBuildInformation());\n\t\t\t\t\tonloadCallback();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tscript.addEventListener(\"error\", () => {\n\t\t\tconsole.error(\"Failed to load \" + OPENCV_URL);\n\t\t});\n\t\tscript.src = OPENCV_URL;\n\t\tlet node = document.querySelector(\"head\");\n\t\tnode.appendChild(script);\n\t}\n\n\tloadImage(url, callback) {\n\t\t/*\n\t\t * utils.loadImage(url, (src) => {\n\t\t * \t\tcv.imshow(\"mycanvas\", src);\n\t\t * });\n\t\t *\n\t\t * 引数によって指定された画像を読み込みimg要素を返す函数。\n\t\t */\n\t\tlet img = new Image();\n\t\timg.crossOrigin = \"anonymous\";\n\t\timg.src = url;\n\t\timg.onload = () => {\n\t\t\tconst src = cv.imread(img, cv.IMREAD_COLOR);\n\t\t\tcallback(src);\n\t\t\tsrc.delete();\n\t\t}\n\t}\n\n\texecuteScript(url) {\n\t\t/*\n\t\t * utils.executeSctipt(url);\n\t\t *\n\t\t * 引数によって指定されたスクリプトファイルを読み出し実行する函数。\n\t\t * 実行するときはloadOpenCV()の後でなければならない。\n\t\t * あるいは次のようにloadOpenCV()のcallbackに指定しても良い。\n\t\t *\n\t\t * Util.loadOpenCV(() => {\n\t\t *\tUtil.executeScript(\"./process.js\");\n\t\t * });\n\t\t */\n\t\tconst SCRIPT_URL = url;\n\t\tlet script = document.createElement(\"script\");\n\t\tscript.setAttribute(\"type\", \"text/javascript\");\n\t\tscript.src = SCRIPT_URL;\n\t\tscript.addEventListener(\"load\", () => {\n\t\t\tconsole.log(\"Now loading \" + SCRIPT_URL);\n\t\t});\n\t\tscript.addEventListener(\"onload\", () => {\n\t\t\tconsole.log(\"Executing \" + SCRIPT_URL);\n\t\t});\n\t\tlet node = document.querySelector(\"body\");\n\t\tnode.appendChild(script);\n\t}\n\n\tstatic credit() {\n\t\tconsole.log(\"(C) Copyright 2020 YUUKIToriyama, All Rights Reserved.\");\n\t}\n}\nexport default opencvUtils;\n","/* ScrollDialog.jsx */\n\nimport React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass ScrollDialog extends React.Component {\n    constructor(props) {\n\t\tsuper(props);\n        this.state = {\n            open: false\n        };\n        this.descriptionElement = React.createRef();\n    }\n\n    handleClickOpen = () => {\n        this.setState({\n            open: true\n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n/*\t\n\tcomponentDidUpdate(prevPrep, prevState) {\n\t\tif (prevState.open !== this.state.open) {\n\t\t\tif (this.descriptionElement.current != null) {\n\t\t\t\tthis.descriptionElement.current.focus();\n\t\t\t}\n\t\t}\n\t}\n\t*/\n\n    render() {\n        return (\n            <div>\n                <Button onClick={this.handleClickOpen}>{this.props.label}</Button>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    scroll=\"paper\"\n                    aria-labelledby=\"scroll-dialog-title\"\n                    aria-describedby=\"scroll-dialog-description\"\n                >\n                    <DialogTitle id=\"scroll-dialog-title\">{this.props.title}</DialogTitle>\n                    <DialogContent dividers={true}>\n                        <DialogContentText\n                            id=\"scroll-dialog-description\"\n                            ref={this.descriptionElement}\n                            tabIndex={-1}\n                        >\n\t\t\t\t\t\t\t{this.props.content}\n                        </DialogContentText>\n                    </DialogContent>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<Button onClick={this.handleClose} color=\"primary\">\n\t\t\t\t\t\t\tOK\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default ScrollDialog;","/* MyAppBar.jsx */\n\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {\n\tAppBar,\n\tToolbar,\n\tTypography,\n\tIconButton\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\n// 自作モジュールの読み込み\nimport ScrollDialog from \"./ScrollDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2)\n\t},\n\ttitle: {\n\t\tflexGrow: 1\n\t}\n}));\n\nconst message = `\nimageCompare 0.9\nhttps://github.com/YUUKIToriyama/imageCompare\n(C)Copyright 2020 YUUKIToriyama All Rights Reserved.\n`.split(\"\\n\").map(line => <span>{line}<br/></span>);\n\nconst MyAppBar = () => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n\t\t\t\t\t\t<MenuIcon/>\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\n\t\t\t\t\t\timageCompare\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<ScrollDialog\n\t\t\t\t\t\tlabel=\"Help\"\n\t\t\t\t\t\ttitle=\"About this app\"\n\t\t\t\t\t\tcontent={message}\n\t\t\t\t\t/>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t);\n};\n\nexport default MyAppBar;","/* PreviewImage.jsx */\n\nimport React from \"react\";\n\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\n\nclass PreviewImage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.mapRef = React.createRef();\n\t\tthis.state = {\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t}\n\t\tthis.map = null;\n\t\tthis.layer = null;\n\t\tthis.imageBounds;\n\t}\n\n\tcomponentDidMount() {\n\t\tlet image = this.props.image;\n\t\tthis.imageBounds = new L.latLngBounds([[-image.height / 2, -image.width / 2], [image.height / 2, image.width / 2]]);\n\n\t\tthis.map = L.map(this.mapRef.current, {\n\t\t\tcenter: [0,0],\n\t\t\tmaxBounds: this.imageBounds.pad(0.3),\n\t\t\tcrs: L.CRS.Simple\n\t\t});\n\t\tthis.layer = L.imageOverlay(image.base64, this.imageBounds);\n\t\tthis.layer.addTo(this.map);\n\t\tthis.map.fitBounds(this.imageBounds);\n\t\t//this.layers[0] = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png');\n\t\t//this.layers[0].addTo(this.map);\n\t\t//this.map.fitBounds([[35,135], [37, 136]]);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div ref={this.mapRef} style={{width: \"100%\", height: \"300px\"}}></div>\n\t\t)\n\t}\n}\n\nexport default PreviewImage;\n","/* ImageLoader.jsx */\n\nimport React from \"react\";\nimport { Box, IconButton } from \"@material-ui/core\";\nimport { PhotoCamera, DeleteForever } from \"@material-ui/icons\";\nimport FileInputComponent from \"react-file-input-previews-base64\";\n\n// 自作モジュールの読み込み\nimport PreviewImage from \"./PreviewImage\";\n\nclass ImageLoader extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfile1: {},\n\t\t\tfile2: {},\n\t\t};\n\t}\n\n\tfileInputCallback = (file, flag) => {\n\t\tlet fileDetail = file;\n\t\tlet img = new Image();\n\t\timg.src = fileDetail.base64;\n\t\timg.onload = () => {\n\t\t\tfileDetail[\"width\"] = img.width;\n\t\t\tfileDetail[\"height\"] = img.height;\n\t\t\tif (flag == 1) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tfile1: fileDetail,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tfile2: fileDetail,\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<FileInputComponent\n\t\t\t\t\tlabelText={this.props.loaderId + 1 + \"枚目\"}\n\t\t\t\t\timagePreview={false}\n\t\t\t\t\tmultiple={false}\n\t\t\t\t\tcallbackFunction={(file) => {\n\t\t\t\t\t\tconsole.log(file.name);\n\t\t\t\t\t\tthis.fileInputCallback(file, 1);\n\t\t\t\t\t}}\n\t\t\t\t\tbuttonComponent={\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\taria-label=\"upload picture\"\n\t\t\t\t\t\t\tcomponent=\"span\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<PhotoCamera />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t}\n\t\t\t\t\ttextFieldComponent={<input type=\"text\" />}\n\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t/>\n\t\t\t\t{this.state.file1.name !== undefined ? (\n\t\t\t\t\t<PreviewImage image={this.state.file1} />\n\t\t\t\t) : (\n\t\t\t\t\t\"\"\n\t\t\t\t)}\n\t\t\t</Box>\n\t\t);\n\t}\n}\nexport default ImageLoader;\n","/* ImageCrop.jsx */\n\nimport React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport opencvUtils from \"../opencv-utils/opencv-utils\";\n\nclass ImageCrop extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.canvasElement = React.createRef();\n\t\tthis.src;\n\t\tthis.working;\n\t\tthis.imageSize;\n\t\tthis.scale;\n\t\tthis.state = {\n\t\t\tvertices: []\n\t\t}\n\t}\n\n\tshowImage = (imageURL, canvas) => {\n\t\t// opencvUtilsを援用して画像をCanvasに読み込み\n\t\t// typeof(src): cv.Mat\n\t\tconst opencv_utils = new opencvUtils();\n\t\topencv_utils.loadImage(imageURL, (src) => {\n\t\t\tcv.imshow(canvas, src);\n\t\t\t// 一旦srcを削除するのでデータを退避\n\t\t\tthis.src = src.clone();\n\t\t\tthis.working = src.clone();\n\n\t\t\t// 画像のサイズを計測\n\t\t\tconsole.log(src.size());\n\t\t\tthis.imageSize = src.size();\n\t\t\tthis.scale = canvas.clientWidth / this.imageSize.width;\n\n\t\t\t// srcを削除\n\t\t\tsrc.delete();\n\t\t});\n\t}\n\n\tdrawRectifyArea = (event) => {\n\t\tconst fillColor = new cv.Scalar(255,255,0, 0.5);\n\t\tconst strokeColor = new cv.Scalar(255,0, 255, 0.5);\n\t\tlet n = this.state.vertices.length;\n\t\t// ポイントの数が0,1,2,3個のとき\n\t\tif (n < 4) {\n\t\t\t/* \n\t\t\t * キャンパス上のマウスカーソルの位置を特定し、\n\t\t\t * それと、事前に求めておいたscaleの値(実際の画像の大きさと表示上の大きさの比)を元に、\n\t\t\t * 切り出しポイントを特定している。\n\t\t\t */\n\t\t\tlet rect = event.target.getBoundingClientRect();\n\t\t\tlet x = (event.clientX - rect.left) / this.scale;\n\t\t\tlet y = (event.clientY - rect.top) / this.scale;\n\t\t\t//console.log(x,y);\n\t\t\tlet vertex = new cv.Point(parseInt(x), parseInt(y));\n\n\t\t\t// その位置にマーカーを描画\n\t\t\tcv.circle(this.working, vertex, 10 / this.scale, fillColor, cv.FILLED);\n\t\t\tcv.imshow(this.canvasElement.current, this.working);\n\n\t\t\t// 配列verticesに計算したvertexを追加\n\t\t\tthis.state.vertices.push(vertex);\n\n\t\t\t// 2点めからはその一つ前の点とその点を結ぶ線分も描く\n\t\t\tif (n != 0) {\n\t\t\t\tcv.line(this.working, this.state.vertices[n-1], this.state.vertices[n], strokeColor, 2 / this.scale, cv.LINE_AA, 0);\n\t\t\t\tcv.imshow(this.canvasElement.current, this.working);\n\t\t\t}\n\t\t}\n\n\t\t// ポイントの数が3個のとき\n\t\t// 4点目を指定したら最初の1つ目の点と4つ目の点を結び四角形にする\n\t\tif (n == 3) {\n\t\t\tcv.line(this.working, this.state.vertices[3], this.state.vertices[0], strokeColor, 2 / this.scale, cv.LINE_AA, 0);\n\t\t\tcv.imshow(this.canvasElement.current, this.working);\n\t\t}\n\t\t\n\t\t// 4点指定できたら画像処理を行う\n\t\tif (this.state.vertices.length == 4) {\n\t\t\tthis.rectifyImage(this.src, this.state.vertices);\n\t\t}\n\t}\n\n\t// ホモグラフィ変換で画像の歪みを補正する\n\trectifyImage = (src, vertices) => {\n\t\tlet srcArr = [];\n\t\tvertices.forEach(vertex => {\n\t\t\tsrcArr.push(vertex.x);\n\t\t\tsrcArr.push(vertex.y);\n\t\t});\n\n\t\tconst distance = (p1, p2) => {\n\t\t\treturn Math.sqrt((p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2);\n\t\t}\n\n\t\tlet w1 = distance(vertices[0], vertices[1]);\n\t\tlet h1 = distance(vertices[1], vertices[2]);\n\t\tlet w2 = distance(vertices[2], vertices[3]);\n\t\tlet h2 = distance(vertices[3], vertices[0]);\n\n\t\tlet w = Math.max(w1, w2);\n\t\tlet h = Math.max(h1, h2);\n\n\t\tconst dstArr = [\n\t\t\t0, 0,\n\t\t\tw, 0,\n\t\t\tw, h,\n\t\t\t0, h\n\t\t];\n\n\t\tconst srcTri = cv.matFromArray(4, 1, cv.CV_32FC2, srcArr);\n\t\tconst dstTri = cv.matFromArray(4, 1, cv.CV_32FC2, dstArr);\n\t\tconst M = cv.getPerspectiveTransform(srcTri, dstTri);\n\n\t\tlet dst = new cv.Mat();\n\t\tlet dsize = new cv.Size(w, h);\n\n\t\tcv.warpPerspective(src, dst, M, dsize, cv.INTER_LINEAR, cv.BORDER_CONSTANT, new cv.Scalar());\n\t\tcv.imshow(this.canvasElement.current, dst);\n\n\t\t// 処理後の画像を親コンポーネントに渡す\n\t\t//let dataURL = this.canvasElement.current.toDataURL(\"image/png\", 1, w, h);\n\t\tvar processedImage = {\n\t\t\turl: this.canvasElement.current.toDataURL(\"image/png\", 1, w, h),\n\t\t\twidth: w,\n\t\t\theight: h\n\t\t};\n\t\tthis.props.onImageProcessingDone(processedImage);\n\n\t\t[src, dst].forEach(mat => mat.delete());\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.showImage(this.props.image, this.canvasElement.current);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<canvas\n\t\t\t\t\tonClick={(event) => this.drawRectifyArea(event)}\n\t\t\t\t\tref={this.canvasElement}\n\t\t\t\t\tstyle={{width: \"500px\", maxWidth: \"90%\"}}\n\t\t\t\t></canvas>\n\t\t\t</Box>\n\t\t\t\n\t\t);\n\t}\n};\n\nexport default ImageCrop;","/* ImageDisplay.jsx */\n\nimport React from \"react\";\nimport \"leaflet/dist/leaflet.css\";\n/*\nimport {\n    MapContainer,\n    ImageOverlay,\n    //Marker\n} from \"react-leaflet\";\n*/\nimport L from \"leaflet\";\n/*\nimport markerIcon from \"leaflet/dist/images/marker-icon.png\";\nconst popupIcon = L.icon({\n    iconUrl: markerIcon,\n    iconSize: [25,35]\n});\n*/\n\nclass ImageDisplay extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lat: 0, \n            lng: 0,\n            zoom: 0,\n            crs: L.CRS.Simple\n        }\n    }\n\n    render() {\n        const image = this.props.image;\n        return (\n            /*\n            <MapContainer center={[this.state.lat, this.state.lng]} zoom={this.state.zoom} crs={this.state.crs} style={{width: \"100%\", height: \"300px\"}}>\n                <ImageOverlay\n                    attribution=\"imageCompare\"\n                    url={image.url}\n                    bounds={L.latLngBounds([-image.width / 2, -image.height / 2], [image.width / 2, image.height / 2])}\n                >\n                </ImageOverlay>\n            </MapContainer>\n            */\n           <div></div>\n        )\n    }\n}\n\nexport default ImageDisplay;","/* Workflow.jsx */\n\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n\tStepper,\n\tStep,\n\tStepLabel,\n\tStepContent,\n\tButton,\n\tBox,\n\tPaper,\n\tTypography,\n} from \"@material-ui/core\";\n\n// 自作モジュールの読み込み\nimport ImageLoader from \"./ImageLoader\";\nimport ImageCrop from \"./ImageCrop\";\nimport ImageDisplay from \"./ImageDisplay\";\n\nconst styles = {\n\troot: {\n\t\twidth: \"100%\",\n\t},\n\tbutton: {\n\t\tmarginTop: \"15px\",\n\t\tmarginRight: \"15px\",\n\t},\n\tactionsContainer: {\n\t\tmarginBottom: \"15px\",\n\t},\n\tresetContainer: {\n\t\tpadding: \"15px\",\n\t},\n};\n\nclass Workflow extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleInputImageChange = this.handleInputImageChange.bind(this);\n\t\tthis.state = {\n\t\t\tactiveStep: 0,\n\t\t\tinputImages: [null, null],\n\t\t\tprocessedImage: {\n\t\t\t\turl: \"\",\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t},\n\t\t};\n\t}\n\n\tsteps = [\"画像をアップロード\", \"頂点を選択\", \"変換\"];\n\n\t// 読み込んだ画像のURLを変更する関数\n\t// ImageLoaderから呼び出して使う\n\t//\thandleInputImageChange = (i, inputImage) => {\n\thandleInputImageChange = (i) => {\n\t\t(inputImage) => {\n\t\t\tlet images = this.state.inputImages[i];\n\t\t\timages[i] = inputImage;\n\t\t\tthis.setState({\n\t\t\t\tinputImages: images,\n\t\t\t});\n\t\t};\n\t};\n\trenderImageLoader = (i) => {\n\t\treturn (\n\t\t\t<ImageLoader\n\t\t\t\tloaderId={i}\n\t\t\t\tonInputImageChange={this.handleInputImageChange(i)}\n\t\t\t/>\n\t\t);\n\t};\n\n\t// 処理の終わった画像を受け取る関数\n\t// ImageCropsから呼び出して使う\n\thandleImageProcessingDone = (image) => {\n\t\tthis.setState({\n\t\t\tprocessedImage: image,\n\t\t});\n\t};\n\n\t// Stepperの挙動を制御する関数\n\thandleNext = () => {\n\t\tthis.setState({\n\t\t\tactiveStep: this.state.activeStep + 1,\n\t\t});\n\t};\n\thandleBack = () => {\n\t\tthis.setState({\n\t\t\tactiveStep: this.state.activeStep - 1,\n\t\t});\n\t};\n\thandleReset = () => {\n\t\tthis.setState({\n\t\t\tactiveStep: 0,\n\t\t});\n\t};\n\n\tgetStepContent = (step) => {\n\t\tswitch (step) {\n\t\t\tcase 0:\n\t\t\t\treturn (\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t処理を行ないない画像をアップロードしてください\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t{this.renderImageLoader(0)}\n\t\t\t\t\t\t{this.renderImageLoader(1)}\n\t\t\t\t\t</Box>\n\t\t\t\t);\n\t\t\tcase 1:\n\t\t\t\treturn (\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t画像補正のために頂点をマウスで選択して下さい\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<ImageCrop\n\t\t\t\t\t\t\timage={this.state.inputImage}\n\t\t\t\t\t\t\tonImageProcessingDone={this.handleImageProcessingDone}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t);\n\t\t\tcase 2:\n\t\t\t\treturn (\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Typography>処理中……</Typography>\n\t\t\t\t\t\t<ImageDisplay image={this.state.processedImage} />\n\t\t\t\t\t</Box>\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn <Typography>Unknown step</Typography>;\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Box className={this.props.classes.root}>\n\t\t\t\t<Stepper activeStep={this.state.activeStep} orientation=\"vertical\">\n\t\t\t\t\t{this.steps.map((label, index) => (\n\t\t\t\t\t\t<Step key={label}>\n\t\t\t\t\t\t\t<StepLabel>{label}</StepLabel>\n\t\t\t\t\t\t\t<StepContent>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t// 各ステップがここに挿入される\n\t\t\t\t\t\t\t\t\tthis.getStepContent(index)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<Box className={this.props.classes.actionsContainer}>\n\t\t\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tdisabled={this.state.activeStep === 0}\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleBack}\n\t\t\t\t\t\t\t\t\t\t\tclassName={this.props.classes.button}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleNext}\n\t\t\t\t\t\t\t\t\t\t\tclassName={this.props.classes.button}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.activeStep === this.steps.length - 1\n\t\t\t\t\t\t\t\t\t\t\t\t? \"Finish\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"Next\"}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</StepContent>\n\t\t\t\t\t\t</Step>\n\t\t\t\t\t))}\n\t\t\t\t</Stepper>\n\t\t\t\t{this.state.activeStep === this.steps.length && (\n\t\t\t\t\t<Paper\n\t\t\t\t\t\tsquare\n\t\t\t\t\t\televation={0}\n\t\t\t\t\t\tclassName={this.props.classes.resetContainer}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Typography>処理が完了しました！</Typography>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={this.handleReset}\n\t\t\t\t\t\t\tclassName={this.props.classes.button}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tやり直す\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Paper>\n\t\t\t\t)}\n\t\t\t</Box>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(Workflow);\n","/* MainContent.jsx */\n\nimport React from \"react\";\n\n// 自作モジュールの読み込み\nimport Workflow from \"./Workflow.jsx\";\n\nclass MainContent extends React.Component {\n\tstate = {\n\t\timage: \"\"\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Workflow />\n\t\t);\n\t}\n}\n\nexport default MainContent;\n","/* LoadingSpinner.jsx */\n/*\n * OpenCV.jsの読み込みに時間がかかるので読み込んでいるあいだスピナーを表示します\n *\n */\n\nimport React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Icon from '@material-ui/core/Icon';\nimport DoneIcon from '@material-ui/icons/Done';\n\n// 自作モジュールの読み込み\nimport ScrollDialog from \"./ScrollDialog\";\n\nclass LoadingSpinner extends React.Component {\n\trender() {\n\t\treturn(\n\t\t\t<Box>\n\t\t\t\t{this.props.loading ? <CircularProgress /> : <Icon color=\"primary\" fontSize=\"large\"><DoneIcon/></Icon>}\n\t\t\t\t<Typography>\n\t\t\t\t\t{this.props.loading ? \"Now Loading OpenCV.js...\" : \"OpenCV.js has been loaded on your browser!\"}\n\t\t\t\t</Typography>\n\t\t\t\t{this.props.loading ? \"\" : <ScrollDialog label=\"About OpenCV.js\" title=\"Build information\" content={cv.getBuildInformation().split(\"\\n\").map((line) => <span>{line}<br /></span>)} />}\n\t\t\t</Box>\n\t\t)\n\t}\n}\n\nexport default LoadingSpinner;\n","/* App.jsx */\nimport React from \"react\";\nimport {\n\tcreateMuiTheme,\n\tThemeProvider\n} from '@material-ui/core/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport orange from \"@material-ui/core/colors/orange\";\n\n// 自作モジュールの読み込み\nimport opencvUtils from \"./opencv-utils/opencv-utils.js\";\nimport MyAppBar from \"./components/MyAppBar.jsx\";\nimport MainContent from \"./components/MainContent.jsx\";\nimport LoadingSpinner from \"./components/LoadingSpinner.jsx\";\n\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: orange\n\t},\n\ttypography: {\n\t\tfontFamily: [\n\t\t\t\"Roboto\",\n\t\t\t\"Noto Sans\"\n\t\t].join(\",\"),\n\t\tfontSize: 13,\n\t\th1: {\n\t\t\tfontSize: \"1.75rem\"\n\t\t},\n\t\th2: {\n\t\t\tfontSize: \"1.5rem\"\n\t\t},\n\t\th3: {\n\t\t\tfontSize: \"1.25rem\"\n\t\t},\n\t\th4: {\n\t\t\tfontSize: \"1.125rem\"\n\t\t},\n\t\th5: {\n\t\t\tfontSize: \"1rem\"\n\t\t},\n\t\th6: {\n\t\t\tfontSize: \"1rem\"\n\t\t}\n\t}\n});\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloading: true,\n\t\t}\n\t}\n\n\t/*\n\t// Appコンポーネントが呼び出されたら次はOpenCV.jsの読み込みを行なう\n\tcomponentDidMount() {\n\t\tconst opencv_utils = new opencvUtils();\n\t\topencv_utils.loadOpenCV(\"https://docs.opencv.org/4.5.0/opencv.js\", () => {\n\t\t\t//opencv_utils.executeScript(\"./process.js\");\n\t\t\t// OpenCV.jsの読み込みが完了したらstate.loadingをfalseにする\n\t\t\tthis.setState({\n\t\t\t\tloading: false\n\t\t\t});\n\t\t});\n\t}\n\t*/\n\n\trender() {\n\t\treturn (\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<MyAppBar />\n\t\t\t\t<LoadingSpinner loading={this.state.loading} />\n\t\t\t\t<MainContent />\n\t\t\t</ThemeProvider>\n\t\t);\n\t}\n}\n\nexport default App;\n","/* index.js */\n\n// react\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// leaflet\n//import Leaflet from \"leaflet\";\n//import {MapContainer, TileLayer} from \"react-leaflet\";\n\n// opencv\n//import \"./opencv\";\n\n// styleSheet\nimport \"./style.css\";\n//import \"../node_modules/leaflet/dist/leaflet.css\"; // ./style.cssによって間接的に読み込んでいる \n\n// Appコンポーネントを読み込む\nimport App from \"./App.jsx\";\nReactDOM.render(<App/>, document.getElementById(\"app\"));\n"],"sourceRoot":""}