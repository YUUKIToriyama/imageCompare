{
  "version": 3,
  "sources": ["/home/runner/work/imageCompare/imageCompare/src/components/MenuBar.jsx"],
  "sourcesContent": ["/* MenuBar.jsx */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {\n\tAppBar,\n\tToolbar,\n\tTypography,\n\tIconButton,\n\tCircularProgress,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\n// \u81EA\u4F5C\u30E2\u30B8\u30E5\u30FC\u30EB\u306E\u8AAD\u307F\u8FBC\u307F\nimport MyDrawer from \"./MyDrawer\";\nimport ScrollDialog from \"./ScrollDialog\";\nimport LicenseInfo from \"./LicenseInfo\";\n\nconst useStyles = (theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2),\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t},\n});\n\nclass MenuBar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.drawerRef = React.createRef();\n\t}\n\n\thandleDrawerOpen = () => {\n\t\tthis.drawerRef.current.handleDrawerOpen();\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<AppBar position=\"static\">\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\taria-label=\"menu\"\n\t\t\t\t\t\t\tonClick={this.handleDrawerOpen}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\n\t\t\t\t\t\t\t{this.props.title}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t{!this.props.isOpencvLoaded ? (\n\t\t\t\t\t\t\t<CircularProgress color=\"inherit\" />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<ScrollDialog\n\t\t\t\t\t\t\t\t\tlabel=\"About OpenCV.js\"\n\t\t\t\t\t\t\t\t\ttitle=\"Build information\"\n\t\t\t\t\t\t\t\t\tcontentText={cv\n\t\t\t\t\t\t\t\t\t\t.getBuildInformation()\n\t\t\t\t\t\t\t\t\t\t.split(\"\\n\")\n\t\t\t\t\t\t\t\t\t\t.map((line, key) => (\n\t\t\t\t\t\t\t\t\t\t\t<span key={key}>\n\t\t\t\t\t\t\t\t\t\t\t\t{line}\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<ScrollDialog\n\t\t\t\t\t\t\tlabel=\"Licenses\"\n\t\t\t\t\t\t\ttitle=\"\u30E9\u30A4\u30BB\u30F3\u30B9\u60C5\u5831\"\n\t\t\t\t\t\t\tcontent={<LicenseInfo />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ScrollDialog\n\t\t\t\t\t\t\tlabel=\"Help\"\n\t\t\t\t\t\t\ttitle=\"About this app\"\n\t\t\t\t\t\t\tcontentText={this.props.message}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t<MyDrawer ref={this.drawerRef} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withStyles(useStyles)(MenuBar);\n\nMenuBar.propTypes = {\n\tmessage: PropTypes.string,\n\ttitle: PropTypes.string.isRequired,\n};\n"],
  "mappings": "AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAGA;AACA;AACA;AAEA,MAAM,YAAY,CAAC,UAAW;AAAA,EAC7B,MAAM;AAAA,IACL,UAAU;AAAA;AAAA,EAEX,YAAY;AAAA,IACX,aAAa,MAAM,QAAQ;AAAA;AAAA,EAE5B,OAAO;AAAA,IACN,UAAU;AAAA;AAAA;AAIZ,sBAAsB,MAAM,UAAU;AAAA,EACrC,YAAY,OAAO;AAClB,UAAM;AACN,SAAK,YAAY,MAAM;AAAA;AAAA,EAGxB,mBAAmB,MAAM;AACxB,SAAK,UAAU,QAAQ;AAAA;AAAA,EAGxB,SAAS;AACR,UAAM,CAAE,WAAY,KAAK;AACzB,WACC,oCAAC,OAAD;AAAA,MAAK,WAAW,QAAQ;AAAA,OACvB,oCAAC,QAAD;AAAA,MAAQ,UAAS;AAAA,OAChB,oCAAC,SAAD,MACC,oCAAC,YAAD;AAAA,MACC,MAAK;AAAA,MACL,WAAW,QAAQ;AAAA,MACnB,OAAM;AAAA,MACN,cAAW;AAAA,MACX,SAAS,KAAK;AAAA,OAEd,oCAAC,UAAD,QAED,oCAAC,YAAD;AAAA,MAAY,SAAQ;AAAA,MAAK,WAAW,QAAQ;AAAA,OAC1C,KAAK,MAAM,QAEZ,CAAC,KAAK,MAAM,iBACZ,oCAAC,kBAAD;AAAA,MAAkB,OAAM;AAAA,SAEvB,oCAAC,cAAD;AAAA,MACC,OAAM;AAAA,MACN,OAAM;AAAA,MACN,aAAa,GACX,sBACA,MAAM,MACN,IAAI,CAAC,MAAM,QACX,oCAAC,QAAD;AAAA,QAAM;AAAA,SACJ,MACD,oCAAC,MAAD;AAAA,QAKN,oCAAC,cAAD;AAAA,MACC,OAAM;AAAA,MACN,OAAM;AAAA,MACN,SAAS,oCAAC,aAAD;AAAA,QAEV,oCAAC,cAAD;AAAA,MACC,OAAM;AAAA,MACN,OAAM;AAAA,MACN,aAAa,KAAK,MAAM;AAAA,UAI3B,oCAAC,UAAD;AAAA,MAAU,KAAK,KAAK;AAAA;AAAA;AAAA;AAMxB,eAAe,WAAW,WAAW;AAErC,QAAQ,YAAY;AAAA,EACnB,SAAS,UAAU;AAAA,EACnB,OAAO,UAAU,OAAO;AAAA;",
  "names": []
}
